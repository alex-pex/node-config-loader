{"version":3,"sources":["../src/utils/merge.js"],"names":[],"mappings":";;;;;;;kBAwBwB,KAAK;AAxB7B,SAAS,aAAa,CAAC,MAAM,EAAE,GAAG,EAAE;AAChC,QAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;AAC7B,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AACzC,YAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAA;AACnB,YAAM,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAA;AACpB,YAAI,GAAG,KAAK,SAAS,EAAE;AACnB,gBAAI,QAAO,GAAG,yCAAH,GAAG,OAAK,QAAQ,IAAI,GAAG,KAAK,IAAI,EAAE;AACzC,oBAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;AACpB,0BAAM,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;iBAC/B,MAAM;AACH,wBAAI,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;AACd,8BAAM,CAAC,GAAG,CAAC,GAAG,EAAE,CAAA;qBACnB;AACD,iCAAa,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAA;iBAClC;aACJ,MAAM;AACH,sBAAM,CAAC,GAAG,CAAC,GAAG,GAAG,CAAA;aACpB;SACJ;KACJ;;AAED,WAAO,MAAM,CAAA;CAChB;;AAEc,SAAS,KAAK,GAAG;AAC5B,QAAM,OAAO,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;AACrD,QAAM,IAAI,GAAG,EAAE,CAAA;AACf,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAC5C,qBAAa,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA;KAClC;;AAED,WAAO,IAAI,CAAA;CACd","file":"merge.js","sourcesContent":["function mergeToTarget(target, src) {\n    const keys = Object.keys(src)\n    for (let i = 0, j = keys.length; i < j; i++) {\n        const key = keys[i]\n        const val = src[key]\n        if (val !== undefined) {\n            if (typeof val === 'object' && val !== null) {\n                if (Array.isArray(val)) {\n                    target[key] = [].concat(val)\n                } else {\n                    if (!target[key]) {\n                        target[key] = {}\n                    }\n                    mergeToTarget(target[key], val)\n                }\n            } else {\n                target[key] = val\n            }\n        }\n    }\n\n    return target\n}\n\nexport default function merge() {\n    const objects = Array.prototype.slice.call(arguments)\n    const dest = {}\n    for (let i = 0, j = objects.length; i < j; i++) {\n        mergeToTarget(dest, objects[i])\n    }\n\n    return dest\n}\n"]}